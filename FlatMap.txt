package com.ashok.it;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

public class FlatMapExample {
	public static void main(String[] agrs) {

		List<String> l1 = new ArrayList<>();
		l1.add("a");

		List<String> l2 = new ArrayList<>();
		l2.add("b");

		List<List<String>> l3 = new ArrayList<>();
		l3.add(l2);
		l3.add(l1);

		// I want to convert it into list of stream
		// List<List<String>> ==> List<String>

		List<String> collect = l3.stream().flatMap(p -> p.stream()).collect(Collectors.toList());
		System.out.println(collect);

		List<String> words = Arrays.asList("GFG", "Geeks", "for", "GeeksQuiz", "GeeksforGeeks");
		Optional<String> longestString = words.stream()
				.reduce((word1, word2) -> word1.length() > word2.length() ? word1 : word2);

		// Displaying the longest String
		longestString.ifPresent(System.out::println);

	}
}
